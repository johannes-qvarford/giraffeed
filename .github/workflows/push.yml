on: [push]

name: CI

# We need to set these defaults so that .bashrc is called for each step.
# This is needed so that sdkman can be properly initialized
defaults:
  run:
    shell: bash -ieo pipefail {0}

env:
  CANDIDATE: 17.0.5-amzn
  SDKMAN_CANDIDATE: 17.0.5-amzn
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  SDKMAN_INIT: source "$HOME/.sdkman/bin/sdkman-init.sh"

jobs:
  publish:
    name: Giraffeed
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore Sdkman Cache
        id: cache-sdkman
        uses: actions/cache@v1
        with:
          path: ~/.sdkman
          key: sdkman-${{ runner.os }}-2023-03-18-${{ env.CANDIDATE }}
      - name: Download Sdkman
        run: |
          curl -s "https://get.sdkman.io" | bash
      - name: Source Sdkman
        run: |
          ${{ env.SDKMAN_INIT }}
          sdkman_auto_answer=false
          sdkman_selfupdate_enable=false
      - name: Setup Java
        run: |
          ${{ env.SDKMAN_INIT }}
          sdk install java ${{ env.CANDIDATE }}
          sdk default java ${{ env.CANDIDATE }}
      - name: Restore Maven Cache
        uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ env.CANDIDATE }}-${{ hashFiles('**/pom.xml') }}
      - name: Test
        run: |
          ${{ env.SDKMAN_INIT }}
          sdk env
          ./mvnw clean test
      - name: Build
        run: |
          ${{ env.SDKMAN_INIT }}
          sdk env
          ./mvnw package -DskipTests=true
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: ./src/main/docker/Dockerfile.jvm--ubuntu
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}